<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.0 (Python 3.10.12 on linux)" generated="2024-02-28T10:14:23.852207" rpa="false" schemaversion="5">
<suite id="s1" name="Github Pushing Repository" source="/home/lenovo/Desktop/PFE/Automation-Test-Using-Robot-Framework/VS_codes/tests_Robot_Framework/GitHub_Automatisation/Github_Pushing_Repository.robot">
<test id="s1-t1" name="Clone From GitHub" line="13">
<kw name="Open Connection" owner="SSHLibrary">
<arg>${LAPTOP_HOST}</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" start="2024-02-28T10:14:24.220198" elapsed="0.000837"/>
</kw>
<kw name="Login" owner="SSHLibrary">
<msg time="2024-02-28T10:14:24.222221" level="INFO">Logging into '192.168.1.100:22' as 'lenovo'.</msg>
<msg time="2024-02-28T10:14:25.631342" level="INFO">Read output: Welcome to Ubuntu 22.04.4 LTS (GNU/Linux 6.5.0-21-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

Expanded Security Maintenance for Applications is not enabled.

0 updates can be applied immediately.

24 additional security updates can be applied with ESM Apps.
Learn more about enabling ESM Apps service at https://ubuntu.com/esm

Last login: Wed Feb 28 10:11:40 2024 from 192.168.1.100
[?2004hlenovo@lenovo-Lenovo-ideapad-130-15IKB:~$</msg>
<arg>${LAPTOP_USERNAME}</arg>
<arg>${LAPTOP_PASSWORD}</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<status status="PASS" start="2024-02-28T10:14:24.221573" elapsed="1.410635"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2024-02-28T10:14:25.634470" level="INFO">Executing command 'cd /home/lenovo/Desktop/PFE/Automation-Test-Using-Robot-Framework'.</msg>
<msg time="2024-02-28T10:14:25.659630" level="INFO">Command exited with return code 0.</msg>
<msg time="2024-02-28T10:14:25.660519" level="INFO">${result} = </msg>
<var>${result}</var>
<arg>cd /home/lenovo/Desktop/PFE/Automation-Test-Using-Robot-Framework</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2024-02-28T10:14:25.633411" elapsed="0.027674"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2024-02-28T10:14:25.663525" level="INFO">Executing command 'git add .'.</msg>
<msg time="2024-02-28T10:14:25.709433" level="INFO">Command exited with return code 128.</msg>
<msg time="2024-02-28T10:14:25.709904" level="INFO">${result} = </msg>
<var>${result}</var>
<arg>git add .</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2024-02-28T10:14:25.662759" elapsed="0.047330"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-28T10:14:27.711451" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-28T10:14:25.710576" elapsed="2.001818"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2024-02-28T10:14:27.715567" level="INFO">Executing command 'git commit -m "new msg"'.</msg>
<msg time="2024-02-28T10:14:27.746947" level="INFO">Command exited with return code 128.</msg>
<msg time="2024-02-28T10:14:27.747726" level="INFO">${result} = </msg>
<var>${result}</var>
<arg>git commit -m "new msg"</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2024-02-28T10:14:27.714093" elapsed="0.034049"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-28T10:14:29.750344" level="INFO">Slept 2 seconds.</msg>
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-28T10:14:27.749269" elapsed="2.001641"/>
</kw>
<kw name="Execute Command" owner="SSHLibrary">
<msg time="2024-02-28T10:14:29.753156" level="INFO">Executing command 'git push'.</msg>
<msg time="2024-02-28T10:14:29.769794" level="INFO">Command exited with return code 128.</msg>
<msg time="2024-02-28T10:14:29.770445" level="INFO">${result} = </msg>
<var>${result}</var>
<arg>git push</arg>
<doc>Executes ``command`` on the remote machine and returns its outputs.</doc>
<status status="PASS" start="2024-02-28T10:14:29.752175" elapsed="0.018723"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-28T10:14:34.773949" level="INFO">Slept 5 seconds.</msg>
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-28T10:14:29.772588" elapsed="5.002636"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-28T10:14:34.779960" level="INFO"/>
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-28T10:14:34.778001" elapsed="0.002948"/>
</kw>
<doc>Transfer the firmware upgrade file from the laptop to the card</doc>
<status status="PASS" start="2024-02-28T10:14:24.217594" elapsed="10.567982"/>
</test>
<status status="PASS" start="2024-02-28T10:14:23.858910" elapsed="10.932422"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Github Pushing Repository">Github Pushing Repository</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
